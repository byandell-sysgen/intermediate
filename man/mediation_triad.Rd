% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mediation_triad.R
\name{mediation_triad}
\alias{mediation_triad}
\alias{ggplot_mediation_triad}
\title{Triad scatter plot for mediator and target}
\usage{
mediation_triad(target, mediator, driver, covar_tar = NULL,
  covar_med = NULL, kinship = NULL, fitFunction = fitQtl2, sdp = NULL,
  allele = TRUE, label_fn = pattern_label, group_fn = pattern_sdp)

ggplot_mediation_triad(x, ..., type = c("by_mediator", "by_target",
  "driver_offset", "driver"), tname = "target", mname = "mediator",
  dname = "driver", centerline = 0, main = tname)
}
\arguments{
\item{target}{vector or 1-column matrix with target values}

\item{mediator}{vector or 1-column matrix with mediator values}

\item{driver}{vector or matrix with driver values}

\item{covar_tar}{optional covariates for target}

\item{covar_med}{optional covariates for mediator}

\item{kinship}{optional kinship matrix among individuals}

\item{fitFunction}{function to fit models with driver, target and mediator}

\item{sdp}{SNP distribution pattern for plot colors}

\item{allele}{Driver has alleles if \code{TRUE}, otherwise allele pairs.}

\item{x}{object of class \code{mediation_triad}}

\item{\dots}{additional parameters for plotting}

\item{type}{type of plot: one of \code{("by_mediator", "by_target", "driver_offset", "driver")}}

\item{tname}{target name (default \code{"target"})}

\item{mname}{mediator name (default \code{"mediator"})}

\item{dname}{driver name (default \code{"driver"})}

\item{centerline}{horizontal line at value (default = \code{0}); set to \code{NA} for no line or \code{NULL} for mean}

\item{main}{main title (defautl \code{tname})}
}
\description{
Triad plot. Currently relies on \code{sdp} to provide lines, but want to use
coefficients from model fit with \code{\link{mediation_test}} to get lines for
each column of driver.
}
\examples{
data(Tmem68)
# Pick Abhd17a as strongest mediator.
m <- match("Abhd17a", Tmem68$annotation$symbol)
Tmem68$annotation[m,]

med_triad <- mediation_triad(target = Tmem68$target,
                      mediator = Tmem68$mediator[,m, drop = FALSE],
                      driver = Tmem68$qtl.geno,
                      covar_tar = Tmem68$covar,
                      sdp = 1)
ggplot2::autoplot(med_triad)

}
