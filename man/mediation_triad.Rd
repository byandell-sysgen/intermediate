% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mediation_triad.R
\name{mediation_triad}
\alias{mediation_triad}
\alias{summary.mediation_triad}
\alias{ggplot_mediation_triad}
\alias{autoplot.mediation_triad}
\alias{plot.mediation_triad}
\title{Triad scatter plot for target on mediator given driver}
\usage{
mediation_triad(
  target,
  mediator,
  driver,
  covar_tar = NULL,
  covar_med = NULL,
  fitFunction = fitDefault,
  points = c("dyad", "monad"),
  lines = ifelse(points != "dyad", points, "monad"),
  ...
)

\method{summary}{mediation_triad}(object, ...)

ggplot_mediation_triad(
  x,
  tname = "target",
  mname = "mediator",
  dname = "driver",
  centerline = NULL,
  fitline = FALSE,
  main = paste(tname, "by", mname, "and", dname),
  colors = seq_along(unique(dat$col)),
  size = 2,
  fitlines = c("driver", "parallel", "sdp"),
  ...
)

\method{autoplot}{mediation_triad}(object, ...)

\method{plot}{mediation_triad}(x, ...)
}
\arguments{
\item{target}{vector or 1-column matrix with target values}

\item{mediator}{vector or 1-column matrix with mediator values}

\item{driver}{vector or matrix with driver values}

\item{covar_tar}{optional covariates for target}

\item{covar_med}{optional covariates for mediator}

\item{fitFunction}{function to fit models with driver, target and mediator}

\item{...}{additional arguments}

\item{object}{object of class \code{mediation_triad}}

\item{x}{object of class \code{mediation_triad}}

\item{tname}{target name (default \code{"target"})}

\item{mname}{mediator name (default \code{"mediator"})}

\item{dname}{driver name (default \code{"driver"})}

\item{centerline}{horizontal line at value (default = \code{NULL}); set to \code{NA} for no line or \code{NULL} for mean}

\item{main}{main title (defautl \code{tname})}

\item{colors}{named colors to use if \code{fitline} is \code{TRUE}}

\item{size}{size of text (default \code{2})}

\item{fitlines}{use driver-specific (\code{"driver"}--the default), parallel (\code{"parallel"}), or 3 SDP lines (\code{"sdp"}) if \code{sdp} in \code{\link{mediation_triad}} is not \code{NULL}}

\item{sdp}{optional sum across driver pattern to collapse columns of driver matrix}
}
\description{
Explores how target is explained by mediator and driver.
If mediator explains most of the driver effect on target,
then driver lines will be indistinguishable.
However, if driver has more information than the mediator
about the target, lines will be separated.
Parallel lines indicate driver and mediator have additive
effects on target; otherwise relationship is more complicated.
}
\details{
Plot method shows target (vertical axis) against mediator (horizontal axis)
with plot symbol identifying individuals (rows) by some summary of the driver.
Regression lines highlight effects of driver columns.
This works best when columns of driver are on the same scale, and even better
if the row values across column entries are positive summing to 1.

Plot label may be for column with largest row value (\code{monad}),
or a concatenation of labels for the two largest row values (\code{dyad}).
Lines may correspond to \code{monad} or to \code{sdp}. 

Driver columns may be compressed to 3 columns using \code{sdp} to 
Simplify Dyad Pattern
(idea taken from genetics \code{sdp} = SNP distribution pattern). 
Basically, the \code{sdp} recoded in base 2 separates columns of
driver into two groups: with 8 columns, \code{sdp} = 2 = 00000010 separate column 2 from
the other columns, while \code{sdp} = 5 = 00000101 separates columns 1 and 3 from the others.

Summary method shows coefficients from model fit of target on mediator and driver.
}
\examples{
data(Tmem68)

target <- cbind(Tmem68 = Tmem68$target)

# Pick strongest mediator that is not target.
m <- match("Nnt", Tmem68$annotation$symbol)
mediator <- Tmem68$mediator[, m, drop = FALSE]
colnames(mediator) <- "Nnt"

med_triad <- mediation_triad(target = target,
                      mediator = mediator,
                      driver = Tmem68$driver,
                      covar_tar = Tmem68$covar,
                      sdp = 2)

summary(med_triad)

ggplot_mediation_triad(med_triad, tname = "Tmem68", mname = "Nnt", fitlines = "sdp")

ggplot_mediation_triad(med_triad, tname = "Tmem68", mname = "Nnt", fitlines = "driver")

}
